/*************************************************************************
 *  Execution:    java EvenFibonacciNumbers
 *
 *  Author: Howard Lopez
 * 
 *  A simple Java program to answer Project Euler (http://projecteuler.net) problem 2:
 * 
 *       Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
 *       1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 *
 *       By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
 * 
 *  Note: Suggestions to improve code or algorithm always welcome
 *
 *************************************************************************/

public class EvenFibonacciNumbers
{
    public static void main(String[] args)
    {
     
        // f1 and f2 will store the 2 previous fibonacci numbers from the current iteration. initialized to 1 and 2, the first numbers of sequence
        int f1 = 1;
        int f2 = 2;
        
        // current fibonacci number initialized to 3rd number in sequence
        int current = f1 + f2;
        
        // sum is initialized to 2 because our loop will be starting at the third number in sequence (thus 2 will already have been added to sum)
        int sum = 2;
        
        // won't count numbers that exceed this amount
        int max = 4000000;
        
        // loop will stop once a fibonacci number would exceed max
        while (current <= max)
        {
            // if even, add to sum
            if (current % 2 == 0)
                sum += current;
              
            // update the new 2 previous
            f1 = f2;
            f2 = current;
            
            // calculate next number in sequence
            current = f1 + f2;
        }
        
        // answer is now stored in sum
        System.out.println("The sum of even-valued Fibonacci numbers less than or equal to " + max + " is: " + sum);
        
    }
    
}